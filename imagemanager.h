#ifndef IMAGEMANAGER_H
#define IMAGEMANAGER_H

#include <vector>
#include "opencv2/opencv.hpp"

class ImageMANAGER
{

    friend class MainWindow;

public:

    ///////////////////////////////////////////////////////////////////////////////////
    /// getInstance：
    ///         单例模式，返回该类的对象的指针
    /// return：(ImageMANAGER*) ImageMANAGER实例
    ///////////////////////////////////////////////////////////////////////////////////
    static ImageMANAGER* getInstance(){return instance;}

    ///////////////////////////////////////////////////////////////////////////////////
    /// reset：
    ///         当载入新的image_Input时，重置m_imageManager
    ///////////////////////////////////////////////////////////////////////////////////
    void reset();

    ///////////////////////////////////////////////////////////////////////////////////
    /// addImage：
    ///         往imgs和imgsName中记录图像
    /// para0: (cv::Mat)图像
    /// para1: (std::string)图像名字
    ///////////////////////////////////////////////////////////////////////////////////
    void addImage(cv::Mat& img,std::string imgName);

    ///////////////////////////////////////////////////////////////////////////////////
    /// getImage：
    ///         根据索引返回图像
    /// para0: (int&)索引
    /// return: (cv::Mat)图像
    ///////////////////////////////////////////////////////////////////////////////////
    cv::Mat getImage(int& index);

    ///////////////////////////////////////////////////////////////////////////////////
    /// getImage：
    ///         根据索引返回图像
    /// para0: (int&&)索引
    /// return: (cv::Mat)图像
    ///////////////////////////////////////////////////////////////////////////////////
    cv::Mat getImage(int&& index);

    ///////////////////////////////////////////////////////////////////////////////////
    /// getImage：
    ///         根据图像名字返回图像
    /// para0:(std::string)图像名字
    /// return:(cv::Mat)图像
    ///////////////////////////////////////////////////////////////////////////////////
    cv::Mat getImage(std::string name);

    ///////////////////////////////////////////////////////////////////////////////////
    /// getImage：
    ///         根据索引返回图像名字
    /// para0:(int&)索引
    /// return:(std::string)图像名字
    ///////////////////////////////////////////////////////////////////////////////////
    std::string getImgName(int& index);

    ///////////////////////////////////////////////////////////////////////////////////
    /// getImage：
    ///         根据索引返回图像名字
    /// para0: (int&)索引
    /// para1: ()
    /// return: (std::string)图像名字
    ///////////////////////////////////////////////////////////////////////////////////
    bool changeImg(int& index,cv::Mat& img,std::string Name);

    ///////////////////////////////////////////////////////////////////////////////////
    /// changeImg：
    ///         根据索引更新图像和图像名字
    /// para0: (int&)索引
    /// return: (bool)是否更新成功
    ///////////////////////////////////////////////////////////////////////////////////
    bool changeImg(int&& index, cv::Mat& img,std::string Name);

    ///////////////////////////////////////////////////////////////////////////////////
    /// clearImgs：
    ///         清空imgs和imgsName
    ///////////////////////////////////////////////////////////////////////////////////
    void clearImgs();


    ///////////////////////////////////////////////////////////////////////////////////
    /// resetImgNames：
    ///         重置imgsName容器
    ///////////////////////////////////////////////////////////////////////////////////
    void resetImgNames();


    ///////////////////////////////////////////////////////////////////////////////////
    /// resetImgNames：
    ///         获得imgsName的大小
    /// return: (int)imgsName的大小
    ///////////////////////////////////////////////////////////////////////////////////
    int getImgNum();

    ///////////////////////////////////////////////////////////////////////////////////
    /// addImageNameInput：
    ///         将处理框输出图片的名字保存到imageManager中，使下次编辑算子参数时可以选择其作为输入
    ///////////////////////////////////////////////////////////////////////////////////
    void addImageNameInput(std::string name);

    ///////////////////////////////////////////////////////////////////////////////////
    /// getImageNameInput：
    ///         根据索引index获得输入图像的名字
    /// return: (std::string)输入图像的名字
    ///////////////////////////////////////////////////////////////////////////////////
    std::string getImageNameInput(int& index);

    ///////////////////////////////////////////////////////////////////////////////////
    /// getImageNameInputNum：
    ///         获得输入图像的个数
    /// return: (int )输入图像的个数
    ///////////////////////////////////////////////////////////////////////////////////
    int getImageNameInputNum();

    ///////////////////////////////////////////////////////////////////////////////////
    /// removeImageNameInput：
    ///         当移除已经编辑好的item时，在删除其输出图像的名字
    /// para0:(std::string)
    ///////////////////////////////////////////////////////////////////////////////////
    void removeImageNameInput(std::string name);

private:
    ImageMANAGER();

    ~ImageMANAGER();

    ImageMANAGER(const ImageMANAGER&) = delete;

    ImageMANAGER& operator=(const ImageMANAGER&) = delete;

private:
    //  单例模式
    static ImageMANAGER*                        instance;

    //  某个处理框可以选择的输入图像的名字
    std::vector<std::string>                    imgsNameInput;

    //  存储图像处理过程中生成的图像
    std::vector<cv::Mat>                        imgs;

    //  存储图像处理过程中生成的图像的名字
    std::vector<std::string>                    imgsName;

};

extern ImageMANAGER* m_imageManager;


#endif // IMAGEMANAGER_H
